<?xml version="1.0" encoding="UTF-8"?>

<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:functx="http://www.functx.com"
	       xmlns="http://www.w3.org/1999/xhtml"
	       xmlns:ncx="http://www.daisy.org/z3986/2005/ncx/"
	       xmlns:h="http://www.w3.org/1999/xhtml"
	       xmlns:e="http://github.com/oreillymedia/epubrenderer"
               stylesheet="../htmlbook.xsl">

  <x:param name="autogenerate-toc" select="0"/>
  <x:param name="toc-placeholder-overwrite-contents" select="0"/>

  <x:scenario label="When *empty* TOC nav element is matched">
    <x:context select="//h:nav[1]">
      <body>
	<nav data-type="toc"/>
	<section id="chapter" data-type="chapter">
	  <h1>This chapter head should be in TOC</h1>
	  <p>Go TOC!</p>
	</section>
      </body>
    </x:context>
   
    <x:scenario label="And autogenerate-toc param is *disabled*">
      <x:context>
	<x:param name="autogenerate-toc" select="0"/>
      </x:context>
      <x:expect label="TOC content *should not* be generated (nav should stay empty)">
	<nav data-type="toc" id="..."/>
      </x:expect>
    </x:scenario>
 
    <x:scenario label="And autogenerate-toc param is *enabled*">
      <x:context>
	<x:param name="autogenerate-toc" select="1"/>
      </x:context>
      <x:expect label="TOC content should be generated"
		test="count(h:nav[.//h:li[contains(., 'This chapter head should be in TOC')]]) = 1"/>
    </x:scenario>
   
  </x:scenario>
  
  <x:scenario label="When *nonempty* TOC nav element is matched">
    <x:context select="//h:nav[1]">
      <body>
	<nav data-type="toc">
	  <h1>Manual TOC</h1>
	  <ol>
	    <li>Entry 1</li>
	    <li>Entry 2</li>
	    <li>Entry 3</li>
	  </ol>
	</nav>
	<section data-type="chapter">
	  <h1>This chapter head should be in TOC</h1>
	  <p>Go TOC!</p>
	</section>
      </body>
    </x:context>
    
    <x:scenario label="And autogenerate-toc param is *disabled*">
      <x:context>
	<x:param name="autogenerate-toc" select="0"/>
      </x:context>
      <!-- Same as in context above, plus autogenerated id -->
      <x:expect label="TOC content *should not* be generated (nav content left as is)">
	<nav id="..." data-type="toc">
	  <h1>Manual TOC</h1>
	  <ol>
	    <li>Entry 1</li>
	    <li>Entry 2</li>
	    <li>Entry 3</li>
	  </ol>
	</nav>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="And autogenerate-toc param is *enabled*, but toc-placeholder-overwrite-contents is *disabled*">
      <x:context>
	<x:param name="autogenerate-toc" select="1"/>
	<x:param name="toc-placeholder-overwrite-contents" select="0"/>
      </x:context>
      <!-- Same as in context above, plus autogenerated id -->
      <x:expect label="TOC content *should not* be generated (nav content left as is)">
	<nav id="..." data-type="toc">
	  <h1>Manual TOC</h1>
	  <ol>
	    <li>Entry 1</li>
	    <li>Entry 2</li>
	    <li>Entry 3</li>
	  </ol>
	</nav>
      </x:expect>
    </x:scenario>

    <x:scenario label="And autogenerate-toc param is *enabled*, and toc-placeholder-overwrite-contents is *enabled*">
      <x:context>
	<x:param name="autogenerate-toc" select="1"/>
	<x:param name="toc-placeholder-overwrite-contents" select="1"/>
      </x:context>
      <x:expect label="TOC content *should* be generated (nav content overwritten)"
		test="count(h:nav[.//h:li[contains(., 'This chapter head should be in TOC')]]) = 1 and
		      not(exists(h:nav//h:h1[contains(., 'Manual TOC')]))"/>
    </x:scenario>
  </x:scenario>

  <x:pending>
    
  <!-- How many combinations of empty/nonempty nav, autogenerate-toc, and toc-placeholder-overwrite-contents do we need to do here? -->
  <x:scenario label="When there are multiple TOC nav elements">
    <x:context>
      <body>
	<nav data-type="toc"/>
	<nav data-type="toc"/>
      </body>
    </x:context>
    <x:expect label="Process them all the same way"/>
  </x:scenario>

  <x:scenario label="When a TOC is generated with a scope specified">
    <x:context/>
    <x:expect label="Root of TOC list should be the scope root"/>
  </x:scenario>
  
  <x:scenario label="When a standard book-level section (chapter) is matched in tocgen mode">
    <x:context/>
    <x:expect label="An entry 'li' should be generated"/>
  </x:scenario>

  <x:scenario label="When a standard book-level section (part) is matched in tocgen mode">
    <x:context/>
    <x:expect label="An entry 'li' should be generated"/>
  </x:scenario>
  
  <x:scenario label="When a subsection within the toc.section.depth is matched in tocgen mode">
    <x:context/>
    <x:expect label="An entry 'li' should be generated"/>
  </x:scenario>

  <x:scenario label="When a subsection at greater depth than the toc.section.depth is matched in tocgen mode">
    <x:context/>
    <x:expect label="An entry 'li' *should not* be generated"/>
  </x:scenario>
  
  <x:scenario label="When a nonsection is matched in tocgen mode">
    <x:context/>
    <x:expect label="An entry 'li' *should not* be generated"/>
  </x:scenario>

  <x:scenario label="When toc-title is called">
    <x:call name="toc-title"/>
    <x:expect label="it should return the proper TOC title"/>
  </x:scenario>    
  </x:pending>
</x:description>
