<xsl:stylesheet version="1.0"
		xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		xmlns:h="http://www.w3.org/1999/xhtml"
		xmlns="http://www.w3.org/1999/xhtml">
  <xsl:output method="xml"
              encoding="UTF-8"/>
  <xsl:preserve-space elements="*"/>


  <xsl:param name="autogenerate-toc" select="1"/>

  <!-- Placeholder element in which to generate the TOC; use <nav> by default.
       TOC will be generated in *first* element of this type -->
  <xsl:param name="toc-placeholder-element" select="'nav'"/>

  <!-- Specify whether or not to overwrite any content in the TOC placeholder element -->
  <xsl:param name="toc-placeholder-overwrite-contents" select="0"/>

  <!-- Specify whether or not to include book title in autogenerated TOC -->
  <xsl:param name="toc-include-title" select="0"/>

  <xsl:template match="/">
    <xsl:if test="$autogenerate-toc = 1 and count(//*[local-name() = $toc-placeholder-element]) = 0">
      <xsl:message>Unable to generate TOC: no <xsl:value-of select="$toc-placeholder-element"/> element found.</xsl:message>
    </xsl:if>
    <xsl:copy>
      <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>
  </xsl:template>

  <!-- Default rule for TOC generation -->
  <xsl:template match="*" mode="tocgen">
    <xsl:apply-templates mode="tocgen"/>
  </xsl:template>

  <xsl:template match="h:section|h:div[@class='part']" mode="tocgen">
    <li>
      <a>
	<xsl:attribute name="href">
	  <!-- Call template for HREF -->
	</xsl:attribute>
	<!-- Call template for label -->
	<!-- Call template for title -->
      </a>
      <xsl:if test="descendant::section|descendant::div[@class='part']">
	<ol>
	  <xsl:apply-templates mode="tocgen"/>
	</ol>
      </xsl:if>
  </xsl:template>

  <xsl:template match="*[local-name() = $toc-placeholder-element]">
    <xsl:choose>
      <!-- If autogenerate-toc is enabled, and it's the first toc-placeholder-element, and it's either empty or overwrite-contents is specified, then
	   go ahead and generate the TOC here -->
      <xsl:when test="($autogenerate-toc = 1) and 
		      (not(preceding::*[local-name() = $toc-placeholder-element])) and 
		      (not(node()) or $toc-placeholder-overwrite-contents != 0)">
	<nav>
	  <xsl:if test="$toc-include-title != 0">
	    <h1>
	      <xsl:value-of select="//h:body/h1"/>
	    </h1>
	  </xsl:if>
	  <ol>
	    <xsl:apply-templates select="/" mode="tocgen"/>
	  </ol>
	</nav>
      </xsl:when>
      <xsl:otherwise>
	<!-- Otherwise, just process as normal -->
	<!-- ToDo: Consider using <xsl:apply-imports> here, depending on how we decide to do stylesheet layering for packaging for EPUB, etc. -->
	<xsl:copy>
	  <xsl:apply-templates select="@*|node()"/>
	</xsl:copy>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- Default Rule -->
  <xsl:template match="@*|node()">
    <xsl:copy>
      <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>
  </xsl:template>

  <!-- By default, TOC will be generated in first empty -->

</xsl:stylesheet> 
