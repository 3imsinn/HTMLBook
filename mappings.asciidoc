== Mappings

A list of mappings is below. Special semantics, unless otherwise noted, come from http://idpf.org/epub/vocab/structure/[EPUB 3 Structural Semantics Vocabulary]

=== Book Components

==== Book

*Legacy DB element*: <book>

*New HTML element*: <body>

*Special semantics*: +class="book"+footnote:[Not in EPUB 3 Structural Semantics Vocabulary; from DocBook]

*Example*

----
<body class="book">
  <!-- Lots of book content here -->
</body>
----

==== Chapter

*Legacy DB element*: <chapter>

*New HTML element*: <section>

*Special semantics*: +class="chapter"+ 

*Example*

----
<section class="chapter">
  <!-- h1 used for all chapter titles -->
  <h1 class="title">Chapter Title</h1>
  <!-- Lots of chapter content here -->
</section>
----

==== Appendix

*Legacy DB element*: <appendix>

*New HTML element*: <section>

*Special semantics*: +class="appendix"+ or class="afterword", depending on content

*Example*

----
<section class="appendix">
  <!-- h1 used for all appendix titles -->
  <h1 class="title">Appendix Title</h1>
  <!-- Lots of appendix content here -->
</section>
----

==== Bibliography

*Legacy DB element*: <bibliography>

*New HTML element*: <section>

*Special semantics*: +class="bibliography"+ for main bibliography; class="biblioentry" for each biblioentry

*Example*

----
<section class="bibliography">
  <!-- optional h1 used for all bibliography titles -->
  <h1 class="title">Bibliography Title</h1>
  <p class="biblioentry"><!-- Biblioentry content --></p>
  <!-- More biblioentries below -->
</section>
----

// OPEN QUESTION: Is <p> sufficient for biblioentries, or do we need more sophisticated tagging for proper CSS styling?

[[glossary]]
==== Glossary

*Legacy DB element*: <glossary>

*New HTML element*: <section> for formal titled glossary; <dl> for the actual definition list

*Special semantics*: +class="glossary"+ on <section> and <dl>; class="glossterm" on <dt>; class="glossdef" on <dd>

*Accessibility Best Practices*: Wrap the term text in a https://developer.mozilla.org/en-US/docs/HTML/Element/dfn[<dfn>]

*Example*

----
<section class="glossary">
  <!-- h1 used for all glossary titles -->
  <h1 class="title">Glossary Title</h1>
  <dl class="glossary">
    <dt class="glossterm">
      <dfn>Atlas</dfn>
    </dt>
    <dd class="glossdef">
      Best authoring platform ever
    </dd>
   </dl>
</section>
----

==== Preface

*Legacy DB element*: <preface>

*New HTML element*: <section>

*Special semantics*: +class="preface"+ or class="foreword", depending on content

*Example*

----
<section class="preface">
  <!-- h1 used for all preface titles -->
  <h1 class="title">Preface Title</h1>
  <!-- Lots of preface content here -->
</section>
----

==== Colophon

*Legacy DB element*: <colophon>

*New HTML element*: <section>

*Special semantics*: +class="colophon"+ 

*Example*

----
<section class="colophon">
  <!-- optional h1 used for colophon titles -->
  <h1 class="title">Colophon Title</h1>
  <!-- Lots of colophon content here -->
</section>
----

==== Part

*Legacy DB element*: <part>

*New HTML element*: <section>

*Special semantics*: +class="part"+ 

*Example*

----
<section class="part">
  <!-- h1 used for all part titles -->
  <h1 class="title">Part Title</h1>
  <!-- Lots of part content here -->
</section>
----

==== Dedication

*Legacy DB element*: <dedication>

*New HTML element*: <section>

*Special semantics*: +class="dedication"+ 

*Example*

----
<section class="dedication">
  <!-- optional h1 used for dedication titles -->
  <h1 class="title">Dedication Title</h1>
  <p>I owe it all to Project Unicorn</p>
</section>
----

==== Index

*Legacy DB element*: <index>

*New HTML element*: <section>

*Special semantics*: +class="index"+ on <section>; class="indexdiv" on each term grouping; class="indexentry" on each indexentry; class="indexentry xref" on index hyperlinksfootnote:[Only "index" is from EPUB3 Structural Semantics Vocabulary; all the rest are DocBook semantics]

// OPEN QUESTION: Not entirely sold on using a definition list to mark up index sections; yes, it provides a built-in mechanism for doing the necessary indentation for subentries, but shoehorning in the index results in icky empty <dd>s in places and semantically it's a bad fit. Wondering why not use an <ol> or <ul> instead? Either way, we'd suppress the markers in CSS (for Mobi, we'd need to transform to <div>/<blockquote> markup--sigh)

// OPEN QUESTION 2: What class to use on index hyperlinks? I'm not in love with "indexentry xref", but I wanted a way to indicate that it was an XREF and that it was in an indexentry

// OPEN QUESTION 3: Special semantics for entry level (primary, secondary, tertiary)?

*Example*

----
<section class="index">
  <!-- optional h1 used for index titles -->
  <h1 class="title">Index Title</h1>
  <div class="indexdiv">
    <h2 class="title">A</h2>
    <dl>
      <dt class="indexentry">Aardvark, <a class="indexentry xref" href="ch01#aardvark">All about Aardvark</a></dt>
      <dd>
	<dl>
           <dt class="indexentry">precursor to Atlas, <a class="indexentry xref" href="ch01#atlasagain">Precursors to Atlas</a></dt>
           <dd></dd>
         </dl>
      </dd>
      <dt class="indexentry">Atlas, <a class="indexentry xref" href="ch01#atlas">All about Atlas</a>
      <dd></dd>
     </dl>
  </div>
</section>
----

==== Title Page

*Legacy DB element*: No directly corresponding element; titlepage section is autogenerated from book metadata

*New HTML element*: <section>

*Special semantics*: +class="titlepage"+ 

*Example*

----
<section class="titlepage">
  <!-- h1 used for book title -->
  <h1 class="title">Book Title</h1>
  <!-- Whatever else goes on the title page: publishername, logo, etc. -->
</section>
----

==== Copyright Page

*Legacy DB element*: No directly corresponding element; copyright page section is autogenerated from book metadata

*New HTML element*: <section>

*Special semantics*: +class="copyright-page"+ 

*Example*

----
<section class="copyright-page">
  <!-- Standard copyright page info marked up in headings, <div>s, <p>s, and lists -->
</section>
----

==== Table of Contents

*Legacy DB element*: <toc> (which we never use, because we autogenerate our TOCs)

*New HTML element*: <nav>

*Special semantics*: +class="toc"+ (epub:type="toc" must be added for EPUB 3 output, if not in source)

*Note*: The TOC should be conformant to the specs for the EPUB3 Navigation document (i.e., an <ol> within a <nav>)

*Example*

----
<nav class="toc" epub:type="toc">
  <h1 class="title">Table of Contents</h1>
   <ol>
     <li><a href="examples_page.html">A Note Regarding Supplemental Files</a></li>
     <li><a href="pr02.html">Foreword</a></li>
     <li><a href="pr03.html">Contributors</a>
       <ol>
         <li><a href="pr03.html#I_sect1_d1e154">Chapter Authors</a></li>
         <li><a href="pr03.html#I_sect1_d1e260">Tech Editors</a></li>
       </ol>
     </li>
  <!-- And so on... -->
  </ol>
</nav>
----

=== Block Elements

==== Paragraph

*Legacy DB element*: <para> or <simpara>

*New HTML element*: <p>

*Special semantics*: in most cases, none--but we may define classes in specific circumstances; e.g., <p class="biblioentry">

*Example*:

----
<p>Nothing exciting here. Move on, yo!</p>
----

==== Sidebar

*Legacy DB element*: <sidebar>

*New HTML element*: <aside>

*Special semantics*: class="sidebar"

*Example*:

----
<aside class="sidebar">
  <!-- Optional h5 for sidebar title -->
  <h5 class="title">Amusing Digression</h5>
  <p>Did you know that in Boston, they call it "soda", and in Chicago, they call it "pop"?</p>
</aside>
----

==== Admonitions

*Legacy DB element*: <note>, <tip>, <warning>, <caution>, <important>

*New HTML element*: <div>

*Special semantics*: class="note" or class="warning" (these are the two admon values in the EPUB 3 Structural Semantics Vocabulary spec; we can always define more if note/warning do not suffice)

*Note*: Given the current state of EPUB 3 support, we will likely need to transform back to <div> in EPUB output order to ensure backward compatibility in EPUB 2 readers

*Example*:

----
<div class="note">
  <p>Type "hubot kitteh" to get a picture of an adorable cat</p>
</div>
----

==== Sections

*Legacy DB element*: <section>, <sect1>, <sect2>, <sect3>, <sect4>, <sect5>

*New HTML element*: <section>

*Special semantics*: class="sect1", class="sect2", class="sect3", class="sect4", class="sect5"

*Note*: EPUB 3 Structural Semantic Vocabulary only has the term "division" for sections, and has no semantics for different section levels, so the above semantics are pulled directly from DocBook (operating on the assumption that semantics for section level are valuable in CSS, such that we don't need to write selectors like:

----
section section section section { font-size: 50% }
----

*Note 2*: Proposed use of HTML heading elements for sections is as follows:

----
sect1 -> h1
sect2 -> h2
sect3 -> h3
sect4 -> h4
sect5 -> h5
----

*Note 3*: Given the current state of EPUB 3 support, we will likely need to transform back to <div> in EPUB output order to ensure backward compatibility in EPUB 2 readers

*Example*:

----
<section class="sect1">
  <h1>A-Head</h1>
  <p>If you httpparty, you must party hard</p>
  <!-- Some more paragraphs -->
  <section class="sect2">
    <h2>B-Head</h2>
    <p>What's the frequency, Kenneth?</p>
    <!-- And so on... -->
  </section>
</section>
----

==== Tables

*Legacy DB element*: <table>

*New HTML element*: <table>

*Special semantics*: None, but use child <caption> element for table title

*Example*:

----
<table>
<caption>State capitals</caption>
<tr>
  <th>State</th>
  <th>Capital</th>
</tr>
<tr>
  <td>Massachusetts</td>
  <td>Boston</td>
</tr>
...
</table>
----

==== Figures

*Legacy DB element*: <figure>

*New HTML element*: <figure>

*Special semantics*: None, but use child <figcaption> element for figure title

*Note*: May need to transform <figure> to a <div> for EPUB output for EPUB 2 backward compatibility

*Example*:

----
<figure>
<figcaption>Project Unicorn Logo</caption>
<img src="unicorn.gif"/>
</figure>
----

==== Examples

*Legacy DB element*: <example>

*New HTML element*: <div>

*Special semantics*: class="example"footnote:[From DocBook; EPUB 3 Structural Semantics Vocabulary has no good match (closest is probably "practice")]

*Note*: Examples are intended to be titled in DocBook model; Would suggest using <caption>, but HTML spec reserves it exclusively for table elements.

*Note*: Typically in our books, examples contain code listings, but this is not a requirement in the DocBook model, and occasionally, we'll include other block content instead (lists, paras, etc.)

*Example*:

----
<div class="example">
<h5>Hello World in Python</h5>
<pre class="programlisting">print "Hello World"</pre>
</div>
----

